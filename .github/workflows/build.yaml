name: Build and Release
on:
  release:
    types:
      - created
  push:  # Add this section for branch pushes
    branches:
      - 4-mac-version-does-not-launch 

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        pip install poetry==1.3.1

    - name: Install dependencies
      run: |
        poetry install

    - name: Create Executable
      run: |
        poetry run pyinstaller --noconsole --onefile image_modernizer.py

    - name: Download NSIS
      run: |
        choco install -y nsis

    - name: Create Installer with NSIS
      run: |
        makensis installer.nsi

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: image_modernizer_installer.exe
        path: ./Image_Modernizer_Installer.exe

    - name: Move Executable to output directory
      run: |
        mkdir output
        mv ./Image_Modernizer_Installer.exe ./output

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: windows-artifact
        path: ./output/*

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install Poetry
      run: |
        pip install poetry==1.3.1

    - name: Install dependencies
      run: |
        poetry install

    - name: Create Executable
      run: |
        poetry run pyinstaller --noconsole --onefile --add-data '/usr/local/Cellar/python/3.11/Python:tcl' image_modernizer.py

    - name: Move Executable to output directory
      run: |
        mkdir output
        mv ./dist/image_modernizer ./output/image_modernizer_macos

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: macos-artifact
        path: ./output/*

  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        
    - name: Install Poetry
      run: |
        pip install poetry==1.3.1

    - name: Install dependencies
      run: |
        poetry install

    - name: Create Executable
      run: |
        poetry run pyinstaller --noconsole --onefile image_modernizer.py

    - name: Move Executable to output directory
      run: |
        mkdir output
        mv ./dist/image_modernizer ./output/image_modernizer_linux

    - name: Upload Executable as Artifact
      uses: actions/upload-artifact@v2
      with:
        name: linux-artifact
        path: ./output/*

  release:
    if: github.event_name == 'release'
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Create dist directory
        run: mkdir dist

      - name: Download Windows Artifact
        uses: actions/download-artifact@v2
        with:
          name: windows-artifact
          path: dist

      - name: Download MacOS Artifact
        uses: actions/download-artifact@v2
        with:
          name: macos-artifact
          path: dist

      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: linux-artifact
          path: dist

      - name: List files in dist
        run: ls -l dist

      - name: Delay to allow release to be created
        run: sleep 10

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_REPO_TOKEN }}
        with:
          files: dist/*
